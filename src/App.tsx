import { useState, useEffect, useMemo } from "react";
import { fetcher } from "./Helpers/fetcher";
import { Country } from "./Types";

import style from "./App.module.scss";
import Card from "./Components/Card/Card";
import Toggler from "./Components/Toggler/Toggler";
import SearchForm from "./Components/SearchForm/SearchForm";
import Select from "./Components/Select/Select";
import LearnMore from "./Components/LearnMore/LearnMore";
import { SelectOption } from "./Components/Select/Select";
import { CountryContextProvider } from "./Context/CountryContext";

function App() {
  const [countries, setCountries] = useState<Country[]>([]);

  const [error, setError] = useState("");
  const [regionFilter, setRegionFilter] = useState("");
  const [countryFilter, setCountryFilter] = useState("");
  const [checker, setChecker] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const [openLearnMore, setOpenLearnMore] = useState(false);

  /**
   * –ó–¥–µ—Å—å  —Å –ø–æ–º–æ—â—å—é –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º—ã –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–∞–Ω.
   *  –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ê–ø–∏ –∏–¥–µ—Ç —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é fetcher (–æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ fetcher).
   *
   */
  const getData = async () => {
    if (!isLoading) setIsLoading(true);
    try {
      const data = await fetcher<Country[]>(
        "https://restcountries.com/v3.1/all"
      );
      setCountries(data);
      setIsLoading(false);
      setError("");
    } catch (err) {
      setError("Something goes wrong! üôÅ");
      setCountries([]);
    } finally {
      console.log("What happened?");
    }
  };

  // —Å–æ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ —Ä–µ–≥–∏–æ–Ω–æ–≤, –ø–µ—Ä–µ–±–∏—Ä–∞—è –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–∞–Ω, –∑–∞–±–∏—Ä–∞—è –æ—Ç—Ç—É–¥–∞ —Å—Ç—Ä–æ–∫—É country.region —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ä–µ–≥–∏–æ–Ω–∞. –° –ø–æ–º–æ—â—å—é useMemo  –º—ã –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏—Ö, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–∞–Ω [countries]. –î–∞–ª–µ–µ —Å –ø–æ–º–æ—â—å—é —Ñ–∏–ª—å—Ç—Ä–∞ –º—ã –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤.
  const regions = useMemo(() => {
    return countries
      .map((country) => {
        return country.region;
      })
      .filter((item, idx, arr) => arr.indexOf(item) === idx);
  }, [countries]);

  /** 
   *–º—ã  —Å–æ–∑–¥–∞–ª–∏ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Select. –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ map
    –º—ã –ø–µ—Ä–µ–±—Ä–∞–ª–∏ —Ä–µ–≥–∏–æ–Ω—ã –∏ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –∫–∞–∂–¥–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞ —Å–æ–∑–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º.  
    */
  const regionOptions: SelectOption[] = useMemo(() => {
    const base: SelectOption = { text: "All", value: "" };
    return [
      base,
      ...regions.map((region) => {
        return {
          text: region,
          value: region,
        };
      }),
    ];
  }, [regions]);

  // –ó–¥–µ—Å—å –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–∞–Ω –ø—É—Å—Ç (–Ω–∏—á–µ–≥–æ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ), —Ç–æ –º—ã –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é getData()
  useEffect(() => {
    if (!countries.length) getData();
  });
  console.clear();
  console.log(regions);

  const filteredCountries = useMemo(() => {
    if (!regionFilter.length && !countryFilter.length) return countries;
    if (regionFilter.length && !countryFilter.length)
      return countries.filter((country) => country.region === regionFilter);
    if (!regionFilter.length && countryFilter.length)
      return countries.filter((country) =>
        country.name.official
          .toLowerCase()
          .includes(countryFilter.toLowerCase())
      );
    return countries.filter(
      (country) =>
        country.region === regionFilter &&
        country.name.official
          .toLowerCase()
          .includes(countryFilter.toLowerCase())
    );
  }, [regionFilter, countryFilter]);

  return (
    <CountryContextProvider>
      <div className={style.wrapper}>
        <div className={style.header}>
          <div className={style.name}>
            <h1>Countries of the world</h1>
            <p>Interactive Reference Guide</p>
          </div>
          <Toggler
            text={checker ? "Dark" : "Light"}
            isChecked={checker}
            onChange={setChecker}
          />
          <SearchForm
            onInput={(value) => setCountryFilter(value)}
            value={countryFilter}
          />
          <Select
            options={regionOptions}
            onChange={(value) => setRegionFilter(value)}
          />
        </div>
        {!isLoading && !filteredCountries.length && <p>Sorry, no matches üôÅ</p>}
        {isLoading && <p>Waiting Loading, Relax üôÅ</p>}
        <ul className={style.countriesList}>
          {filteredCountries.map((country, index) => (
            <li key={index}>
              <Card
                flagUrl={country.flags.svg}
                name={country.name.official}
                capital={""}
                population={country.population}
              />
            </li>
          ))}
        </ul>
        {activeCountry && (
          <LearnMore
            country={activeCountry}
            onClose={() => setActiveCountry(null)}
          />
        )}
      </div>
    </CountryContextProvider>
  );
}

export default App;
